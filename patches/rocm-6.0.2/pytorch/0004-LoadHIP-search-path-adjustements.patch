From 9cf4c641f3722a5b25ff75380afc31c3f2ef0f17 Mon Sep 17 00:00:00 2001
From: Mika Laitio <lamikr@gmail.com>
Date: Tue, 30 Jan 2024 16:11:42 -0800
Subject: [PATCH 4/7] LoadHIP search path adjustements

- search both lib and lib64 directories
  (note some libs still installed to lib-dir
  in rocm_sdk_builder_600)
- set MAGMA_HOME by default to rocm_sdk rootdir
  (rocm_sdk_builder builds magma there)

Signed-off-by: Mika Laitio <lamikr@gmail.com>
---
 cmake/public/LoadHIP.cmake | 42 +++++++++++++++++++-------------------
 1 file changed, 21 insertions(+), 21 deletions(-)

diff --git a/cmake/public/LoadHIP.cmake b/cmake/public/LoadHIP.cmake
index 1e71fa84142..579239ab5df 100644
--- a/cmake/public/LoadHIP.cmake
+++ b/cmake/public/LoadHIP.cmake
@@ -17,8 +17,8 @@ endif()
 
 # MAGMA_HOME
 if(NOT DEFINED ENV{MAGMA_HOME})
-  set(MAGMA_HOME ${ROCM_PATH}/magma)
-  set(ENV{MAGMA_HOME} ${ROCM_PATH}/magma)
+  set(MAGMA_HOME ${ROCM_PATH})
+  set(ENV{MAGMA_HOME} ${ROCM_PATH})
 else()
   set(MAGMA_HOME $ENV{MAGMA_HOME})
 endif()
@@ -138,22 +138,22 @@ if(HIP_FOUND)
   ### Remove setting of Flags when FindHIP.CMake PR #558 is accepted.###
 
   set(hip_DIR ${ROCM_PATH}/lib/cmake/hip)
-  set(hsa-runtime64_DIR ${ROCM_PATH}/lib/cmake/hsa-runtime64)
-  set(AMDDeviceLibs_DIR ${ROCM_PATH}/lib/cmake/AMDDeviceLibs)
-  set(amd_comgr_DIR ${ROCM_PATH}/lib/cmake/amd_comgr)
-  set(rocrand_DIR ${ROCM_PATH}/lib/cmake/rocrand)
-  set(hiprand_DIR ${ROCM_PATH}/lib/cmake/hiprand)
-  set(rocblas_DIR ${ROCM_PATH}/lib/cmake/rocblas)
-  set(hipblas_DIR ${ROCM_PATH}/lib/cmake/hipblas)
-  set(miopen_DIR ${ROCM_PATH}/lib/cmake/miopen)
-  set(rocfft_DIR ${ROCM_PATH}/lib/cmake/rocfft)
-  set(hipfft_DIR ${ROCM_PATH}/lib/cmake/hipfft)
-  set(hipsparse_DIR ${ROCM_PATH}/lib/cmake/hipsparse)
-  set(rccl_DIR ${ROCM_PATH}/lib/cmake/rccl)
-  set(rocprim_DIR ${ROCM_PATH}/lib/cmake/rocprim)
+  set(hsa-runtime64_DIR ${ROCM_PATH}/lib64/cmake/hsa-runtime64)
+  set(AMDDeviceLibs_DIR ${ROCM_PATH}/lib64/cmake/AMDDeviceLibs)
+  set(amd_comgr_DIR ${ROCM_PATH}/lib64/cmake/amd_comgr)
+  set(rocrand_DIR ${ROCM_PATH}/lib64/cmake/rocrand)
+  set(hiprand_DIR ${ROCM_PATH}/lib64/cmake/hiprand)
+  set(rocblas_DIR ${ROCM_PATH}/lib64/cmake/rocblas)
+  set(hipblas_DIR ${ROCM_PATH}/lib64/cmake/hipblas)
+  set(miopen_DIR ${ROCM_PATH}/lib64/cmake/miopen)
+  set(rocfft_DIR ${ROCM_PATH}/lib64/cmake/rocfft)
+  set(hipfft_DIR ${ROCM_PATH}/lib64/cmake/hipfft)
+  set(hipsparse_DIR ${ROCM_PATH}/lib64/cmake/hipsparse)
+  set(rccl_DIR ${ROCM_PATH}/lib64/cmake/rccl)
+  set(rocprim_DIR ${ROCM_PATH}/lib/64cmake/rocprim)
   set(hipcub_DIR ${ROCM_PATH}/lib/cmake/hipcub)
   set(rocthrust_DIR ${ROCM_PATH}/lib/cmake/rocthrust)
-  set(hipsolver_DIR ${ROCM_PATH}/lib/cmake/hipsolver)
+  set(hipsolver_DIR ${ROCM_PATH}/lib64/cmake/hipsolver)
 
 
   find_package_and_print_version(hip REQUIRED)
@@ -177,25 +177,25 @@ if(HIP_FOUND)
   find_package_and_print_version(hipsolver REQUIRED)
 
 
-  find_library(PYTORCH_HIP_LIBRARIES amdhip64 HINTS ${ROCM_PATH}/lib)
+  find_library(PYTORCH_HIP_LIBRARIES amdhip64 HINTS ${ROCM_PATH}/lib ${ROCM_PATH}/lib64)
   # TODO: miopen_LIBRARIES should return fullpath to the library file,
   # however currently it's just the lib name
   if(TARGET ${miopen_LIBRARIES})
     set(PYTORCH_MIOPEN_LIBRARIES ${miopen_LIBRARIES})
   else()
-    find_library(PYTORCH_MIOPEN_LIBRARIES ${miopen_LIBRARIES} HINTS ${ROCM_PATH}/lib)
+    find_library(PYTORCH_MIOPEN_LIBRARIES ${miopen_LIBRARIES} HINTS ${ROCM_PATH}/lib ${ROCM_PATH}/lib64)
   endif()
   # TODO: rccl_LIBRARIES should return fullpath to the library file,
   # however currently it's just the lib name
   if(TARGET ${rccl_LIBRARIES})
     set(PYTORCH_RCCL_LIBRARIES ${rccl_LIBRARIES})
   else()
-    find_library(PYTORCH_RCCL_LIBRARIES ${rccl_LIBRARIES} HINTS ${ROCM_PATH}/lib)
+    find_library(PYTORCH_RCCL_LIBRARIES ${rccl_LIBRARIES} HINTS ${ROCM_PATH}/lib ${ROCM_PATH}/lib64)
   endif()
   # hiprtc is part of HIP
-  find_library(ROCM_HIPRTC_LIB amdhip64 HINTS ${ROCM_PATH}/lib)
+  find_library(ROCM_HIPRTC_LIB amdhip64 HINTS ${ROCM_PATH}/lib ${ROCM_PATH}/lib64)
   # roctx is part of roctracer
-  find_library(ROCM_ROCTX_LIB roctx64 HINTS ${ROCM_PATH}/lib)
+  find_library(ROCM_ROCTX_LIB roctx64 HINTS ${ROCM_PATH}/lib ${ROCM_PATH}/lib64)
 else()
 message( FATAL_ERROR "LoadHIP FATAL error2, ROCM_PATH: ${ROCM_PATH}")
 endif()
-- 
2.41.0

