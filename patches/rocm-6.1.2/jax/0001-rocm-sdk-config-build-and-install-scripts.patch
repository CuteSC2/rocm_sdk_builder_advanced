From 55d6c141ea106ec1c0e15a3b1d57d07b2fbf28d0 Mon Sep 17 00:00:00 2001
From: Mika Laitio <lamikr@gmail.com>
Date: Fri, 23 Aug 2024 11:36:55 -0700
Subject: [PATCH 1/3] rocm sdk config,build and install scripts

Signed-off-by: Mika Laitio <lamikr@gmail.com>
---
 build_rocm.sh     | 41 +++++++++++++++++++++++++++++++++++++++++
 install_rocm.sh   | 25 +++++++++++++++++++++++++
 preconfig_rocm.sh |  6 ++++++
 3 files changed, 72 insertions(+)
 create mode 100755 build_rocm.sh
 create mode 100755 install_rocm.sh
 create mode 100755 preconfig_rocm.sh

diff --git a/build_rocm.sh b/build_rocm.sh
new file mode 100755
index 000000000..b0854f8e2
--- /dev/null
+++ b/build_rocm.sh
@@ -0,0 +1,41 @@
+if [ -z "$1" ]; then
+    install_dir_prefix_rocm=/opt/rocm
+    echo "No rocm_root_directory_specified, using default: ${install_dir_prefix_rocm}"
+else
+    install_dir_prefix_rocm=${1}
+    echo "using rocm_root_directory specified: ${install_dir_prefix_rocm}"
+fi
+if [ -z "$2" ]; then
+    amd_target_gpu=\"gfx1030\"
+    echo "No rocm gpu specified, using default: ${amd_target_gpu}"
+else
+    amd_target_gpu="$2"
+    echo "Using specified amd rocm gpu: ${amd_target_gpu}"
+fi
+
+unset LDFLAGS
+unset CFLAGS
+unset CPPFLAGS
+unset PKG_CONFIG_PATH
+
+export JAX_ROCM_VERSION=${ROCM_VERSION_STR}
+export JAX_RELEASE=1
+export JAXLIB_RELEASE=1
+export TF_NEED_ROCM=1
+export TF_ROCM_AMDGPU_TARGETS=${amd_target_gpu}
+export ROCM_PATH=${install_dir_prefix_rocm}
+export ROCM_HOME=${install_dir_prefix_rocm}
+
+XLA_SRC_DIR=${SDK_SRC_ROOT_DIR}/xla
+
+ROCM_PATH=${install_dir_prefix_rocm} python build/build.py \
+    --enable_rocm \
+    --rocm_amdgpu_targets=${TF_ROCM_AMDGPU_TARGETS} \
+    --rocm_path=$(realpath $install_dir_prefix_rocm) \
+    --bazel_options=--override_repository=xla=$(realpath $XLA_SRC_DIR)
+
+#python -m build --no-isolation --skip-dependency-check
+
+#export CMAKE_C_COMPILER=${install_dir_prefix_rocm}/bin/hipcc
+#export CMAKE_CXX_COMPILER=${install_dir_prefix_rocm}/bin/hipcc
+#ROCM_PATH=${install_dir_prefix_rocm} FFMPEG7_SRC="${install_dir_prefix_rocm}/ffmpeg7_devel" CMAKE_PREFIX_PATH="${install_dir_prefix_rocm};${install_dir_prefix_rocm}/lib64/cmake" USE_ROCM=1 USE_CUDA=0 USE_FFMPEG=1 USE_OPENMP=1 BUILD_SOX=1 CC=${CMAKE_C_COMPILER} CXX=${CMAKE_CXX_COMPILER} python setup.py bdist_wheel
diff --git a/install_rocm.sh b/install_rocm.sh
new file mode 100755
index 000000000..70f5cd246
--- /dev/null
+++ b/install_rocm.sh
@@ -0,0 +1,25 @@
+unset backup_dir_python_wheel
+if [ ! -z "$1" ]; then
+    backup_dir_python_wheel=${1}
+    echo "copying pytorch vision python whl file to directory: ${backup_dir_python_wheel}"
+fi
+# if there are multiple wheel files, find the newest one and install it
+unset -v latest_wheel_file
+for cur_file in dist/*.whl; do
+    [[ $cur_file -nt "$latest_wheel_file" ]] && latest_wheel_file=$cur_file
+done
+if [ ! -z "$latest_wheel_file" ]; then
+    # do not use "pip install --force-reinstall because it can uninstall
+    # own build other packages and then re-install incorrect onew from internet
+    pip uninstall --yes "$latest_wheel_file"
+    pip install "$latest_wheel_file"
+    if [ ! -z "$backup_dir_python_wheel" ]; then
+        if [ ! -d "$backup_dir_python_wheel" ]; then
+            mkdir -p "$backup_dir_python_wheel"
+        fi
+        cp -f "$latest_wheel_file" "$backup_dir_python_wheel"
+    fi
+else
+    echo "Could not find pytorch vision whl file to install"
+    exit 1
+fi
diff --git a/preconfig_rocm.sh b/preconfig_rocm.sh
new file mode 100755
index 000000000..9f71fe83b
--- /dev/null
+++ b/preconfig_rocm.sh
@@ -0,0 +1,6 @@
+# check we are in right directory
+if [[ -f ./preconfig_rocm.sh && -f ./setup.py ]]; then
+    if [ -d build ]; then
+        python ./setup.py clean
+    fi
+fi
-- 
2.41.1

