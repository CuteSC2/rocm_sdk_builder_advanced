From f5506771727e7c9bdbe0710bcdf398d73ba2f60e Mon Sep 17 00:00:00 2001
From: Mika Laitio <lamikr@gmail.com>
Date: Fri, 24 May 2024 03:50:43 -0700
Subject: [PATCH 2/4] gfx1010/1035/1036 and 1103 initial support

Signed-off-by: Mika Laitio <lamikr@gmail.com>
---
 CMakeLists.txt                          |  6 +++---
 include/ck/ck.hpp                       |  7 ++++++-
 include/ck/host_utility/device_prop.hpp | 12 ++++++++++++
 3 files changed, 21 insertions(+), 4 deletions(-)

diff --git a/CMakeLists.txt b/CMakeLists.txt
index 57e52a99e..4df3d04c6 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -114,7 +114,7 @@ if(NOT PROFILER_ONLY)
   if(NOT ENABLE_ASAN_PACKAGING)
     #build CK for all supported targets
     rocm_check_target_ids(DEFAULT_GPU_TARGETS
-        TARGETS "gfx908;gfx90a;gfx940;gfx941;gfx942;gfx1030;gfx1100;gfx1101;gfx1102")
+        TARGETS "gfx908;gfx90a;gfx940;gfx941;gfx942;gfx1010;gfx1030;gfx1031;gfx1032;gfx1035;gfx1036;gfx1100;gfx1101;gfx1102;gfx1103")
   else()
     #build CK only for xnack-supported targets
     rocm_check_target_ids(DEFAULT_GPU_TARGETS
@@ -132,9 +132,9 @@ else()
     elseif(GPU_ARCH MATCHES "gfx94")
         rocm_check_target_ids(DEFAULT_GPU_TARGETS TARGETS "gfx940;gfx941;gfx942")
     elseif(GPU_ARCH MATCHES "gfx10")
-        rocm_check_target_ids(DEFAULT_GPU_TARGETS TARGETS "gfx1030")
+        rocm_check_target_ids(DEFAULT_GPU_TARGETS TARGETS "gfx1010;gfx1030;gfx1031;gfx1032;gfx1035;gfx1036")
     elseif(GPU_ARCH MATCHES "gfx11")
-        rocm_check_target_ids(DEFAULT_GPU_TARGETS TARGETS "gfx1100;gfx1101;gfx1102")
+        rocm_check_target_ids(DEFAULT_GPU_TARGETS TARGETS "gfx1100;gfx1101;gfx1102;gfx1103")
     else()
         message(FATAL_ERROR "For PROFILE_ONLY build, please specify GPU_ARCH as gfx90, gfx94, gfx10, or gfx11")
     endif()
diff --git a/include/ck/ck.hpp b/include/ck/ck.hpp
index 3dc06a670..2f80177cd 100644
--- a/include/ck/ck.hpp
+++ b/include/ck/ck.hpp
@@ -75,7 +75,7 @@ CK_DECLARE_ENV_VAR_BOOL(CK_LOGGING)
 #define CK_BUFFER_RESOURCE_3RD_DWORD -1
 #elif defined(__gfx803__) || defined(__gfx900__) || defined(__gfx906__) || defined(__gfx9__)
 #define CK_BUFFER_RESOURCE_3RD_DWORD 0x00020000
-#elif defined(__gfx103__)
+#elif defined(__gfx101__) || defined(__gfx103__)
 #define CK_BUFFER_RESOURCE_3RD_DWORD 0x31014000
 #elif defined(__gfx11__)
 #define CK_BUFFER_RESOURCE_3RD_DWORD 0x31004000
@@ -83,10 +83,15 @@ CK_DECLARE_ENV_VAR_BOOL(CK_LOGGING)
 #define CK_BUFFER_RESOURCE_3RD_DWORD -1
 #endif
 
+// whether to use assembly or rely on compiler for these instructions
+// TODO: rdna1/gfx1010 has CK_USE_AMD_V_FMAC_F32 but not CK_USE_AMD_V_DOT2_F32_F16 CK_USE_AMD_V_DOT4_I32_I8
+// TODO: check defined(__gfx1035__)
 // FMA instruction
 #ifndef __HIP_DEVICE_COMPILE__                   // for host code, define nothing
 #elif defined(__gfx803__) || defined(__gfx900__) // for GPU code
 #define CK_USE_AMD_V_MAC_F32
+#elif defined(__gfx101__)
+#define CK_USE_AMD_V_FMAC_F32
 #elif defined(__gfx906__) || defined(__gfx9__) || defined(__gfx103__) // for GPU code
 #define CK_USE_AMD_V_FMAC_F32
 #define CK_USE_AMD_V_DOT2_F32_F16
diff --git a/include/ck/host_utility/device_prop.hpp b/include/ck/host_utility/device_prop.hpp
index 116bb3ea0..a02ae8e39 100644
--- a/include/ck/host_utility/device_prop.hpp
+++ b/include/ck/host_utility/device_prop.hpp
@@ -40,7 +40,19 @@ inline std::string get_device_name()
         {"gfx804", "gfx803"},
         {"Vega10", "gfx900"},
         {"gfx901", "gfx900"},
+        {"navi10", "gfx1010"},
+        {"navi12", "gfx1011"},
+        {"navi14", "gfx1012"},
         {"10.3.0 Sienna_Cichlid 18", "gfx1030"},
+        {"navi22", "gfx1031"},
+        {"navi23", "gfx1032"},
+        {"navi24", "gfx1034"},
+        {"rembrandt", "gfx1035"},
+        {"raphael", "gfx1036"},
+        {"navi31", "gfx1100"},
+        {"navi32", "gfx1101"},
+        {"navi33", "gfx1102"},
+        {"phoenix", "gfx1103"},
     };
 
     const auto name = raw_name.substr(0, raw_name.find(':')); // str.substr(0, npos) returns str.
-- 
2.41.1

